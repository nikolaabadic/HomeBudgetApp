@model HomeBudgetApp.WebApp.Models.AccountDetailsModel
@using System.Linq
@using Newtonsoft.Json

@{
    ViewData["Title"] = "Details";
}
@section Style{
    <link rel="stylesheet" href="~/css/details.css" />
}

<h1 class="mt-2">Account Details</h1>
<hr />

<div class="account-details">
    <dl class="row account-row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Currency)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Currency)
        </dd>
        <dt class="col-sm-2">
            Type
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AccountType)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Number)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Number)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Amount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Amount)
        </dd>
    </dl>
    <img class="card-img pr-4" src="~/img/card.png" />
    <div class="credit-cards">
        @if (Model.PaymentCards == null || Model.PaymentCards.Count == 0)
        {
            <h4>No credit cards connected to this account.</h4>
        }
        else
        {
            <h4>Credit cards connected to this account</h4>
            foreach (var c in Model.PaymentCards)
            {
                <div class="d-flex justify-content-between">
                    <h5>@c.PaymentCardNumber</h5>
                    <div>
                        <i class="bi bi-x-circle" style="color:red;"></i>
                        @Html.ActionLink("Delete", "Delete", "PaymentCard", new { id = Model.OwnerAccountID, c.PaymentCardID }, new { @id = "btn-delete-card"})
                    </div>
        
                </div>
            }
        }
        <div class="btn-add-container">
            <i class="bi bi-credit-card-2-back pr-2"></i>
            @Html.ActionLink("Add new Card", "Create", "PaymentCard", new { id = Model.OwnerAccountID })
        </div>
        <div class="d-flex justify-content-end mt-5">
            <a href="@Url.Action("Edit", "Account", new { id = Model.OwnerAccountID, Model.UserID })" class="pr-2">
                <i class="bi bi-gear-fill pr-1"></i>Edit account
            </a>
            <a class="delete-btn" onclick="deleteAccount(@Model.OwnerAccountID)"><i class="bi bi-trash-fill pr-1"></i>Delete account</a>
        </div>
    </div>

</div>
<hr />
@if ((Model.IncomeCategory != null && Model.IncomeLabels != null && Model.IncomeLabels.Count != 0
      && Model.IncomeCategory.Count != 0) || (Model.ExpenseCategory != null && Model.ExpenseLabels != null
      && Model.ExpenseLabels.Count != 0 && Model.ExpenseCategory.Count != 0))
{
    <h2>Account Summary</h2>
    <div id="charts">
        @if (Model.IncomeCategory != null && Model.IncomeLabels != null && Model.IncomeLabels.Count != 0 && Model.IncomeCategory.Count != 0)
        {
            <div class="chart-container">
                <h3>Income</h3>
                <canvas id="pie_chart_income"></canvas>
            </div>
        }
        @if (Model.ExpenseCategory != null && Model.ExpenseLabels != null && Model.ExpenseLabels.Count != 0 && Model.ExpenseCategory.Count != 0)
        {
            <div class="chart-container">
                <h3>Expense</h3>
                <canvas id="pie_chart_expense"></canvas>
            </div>
        }
    </div>
    <hr />
}
<div>
    <div class="d-flex align-items-center mb-4">
        <h1>Transactions</h1>
        <div class="ml-auto">
            <div class="d-flex align-items-center">
                <a asp-action="Create" asp-controller="Transaction" class="mr-5">
                    <i class="bi bi-wallet2"></i>
                    Add new Transaction
                </a>
                <div>
                    <i class="bi bi-search" style="color:black;"></i>
                    @Html.ActionLink("Search transactions", "Search", "Transaction")
                </div>
            </div>
        </div>
    </div>

    <table class="table transactions">
        <thead>
            <tr>
                <th></th>
                <th>Amount</th>
                <th>DateTime</th>
                <th>Purpose</th>
                <th>Sender</th>
                <th>Recipient</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in Model.Transactions)
            {
                <tr>
                    @if (p.AccountID == Model.OwnerAccountID)
                    {
                        <td><i class="bi bi-dash-circle" style="color:red;"></i></td>
                    }
                    else
                    {
                        <td><i class="bi bi-plus-circle" style="color:green;"></i></td>
                    }
                    <td>@p.Amount</td>
                    <td>@p.DateTime.Date.ToString("dd/MM/yyyy")</td>
                    <td>@Html.ActionLink(p.Purpose, "ShowDetails", "Transaction", new { id = p.TransactionID, p.AccountID, p.RecipientID, Model.OwnerAccountID })</td>
                    <td>@p.AccountNumber</td>
                    <td>@p.RecipientAccountNumber</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js"></script>
<script type="text/javascript">
var incomeLabels = @Html.Raw(JsonConvert.SerializeObject(Model.IncomeLabels));
var incomeValues = @Html.Raw(JsonConvert.SerializeObject(Model.IncomeCategory));
var expenseLabels = @Html.Raw(JsonConvert.SerializeObject(Model.ExpenseLabels));
var expenseValues = @Html.Raw(JsonConvert.SerializeObject(Model.ExpenseCategory));

    if (incomeLabels != null && incomeValues != null && incomeLabels.length != 0 && incomeValues.length != 0) {
    var ctx = document.getElementById('pie_chart_income').getContext('2d');
    var barChartIncome = new Chart(ctx, {
        type: 'pie',
        data: {
            labels: incomeLabels,
            datasets: [{
                data: incomeValues,
                backgroundColor: ['rgba(27,110,194)', '#33A1C9', '#38B0DE', '#6996AD', '#8DB6CD', '#A4D3EE', '#4A708B', '#4682B4', '#0D4F8B']
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    display: false
                }],
                xAxes: [{
                    display: false
                }]
            }
        }
    });
    }
    if (expenseLabels != null && expenseValues != null && expenseLabels.length != 0 && expenseValues.length != 0)
{
    var ctxEx = document.getElementById('pie_chart_expense').getContext('2d');
    var barChartExpense = new Chart(ctxEx, {
        type: 'pie',
        data: {
            labels: expenseLabels,
            datasets: [{
                data: expenseValues,
                backgroundColor: ['rgba(27,110,194)', '#33A1C9', '#38B0DE', '#6996AD', '#8DB6CD', '#A4D3EE', '#4A708B', '#4682B4', '#0D4F8B']
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    display: false
                }],
                xAxes: [{
                    display: false
                }]
            }
        }
    });
}

const deleteAccount = (id) => {
    if (confirm('Are you sure you want to delete this account?')){
    $.ajax({
        url: '@Url.ActionLink("Delete", "Account")',
        method: 'post',
        data: { AccountID: parseInt(id), UserID: @Model.UserID},
        success: function (response) {
            window.location.href = response.redirectToUrl;
        },
        error: function () {
            alert("Error");
        }
    });
    }
}

</script>

